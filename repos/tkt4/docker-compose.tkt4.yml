services:
  tkt4:
    image: tkt4:latest
    init: true
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - TKT4_REPO_URL=${TKT4_REPO_URL}
    ports:
      - "5174:5173"  # Direct port access - use 5174 to avoid conflict with main app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tkt4.rule=Host(`tkt4.localhost`)"
      - "traefik.http.services.tkt4.loadbalancer.server.port=5173"
    environment:
      - TKT4_REPO_URL=${TKT4_REPO_URL}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  tkt4-storybook:
    image: tkt4-storybook:latest
    init: true
    build:
      context: ./storybook
      dockerfile: Dockerfile
      args:
        - TKT4_REPO_URL=${TKT4_REPO_URL}
    ports:
      - "6007:6006"  # Direct port access - use 6007 to avoid conflict with main storybook
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tkt4-storybook.rule=Host(`tkt4-storybook.localhost`)"
      - "traefik.http.services.tkt4-storybook.loadbalancer.server.port=6006"
    environment:
      - TKT4_REPO_URL=${TKT4_REPO_URL}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:6006"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    external: true